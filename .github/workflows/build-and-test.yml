name: Build and Test Python Package

on:
  push:
    branches: [develop, feature/*]
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set version with branch and datetime
        id: set_version
        run: |
          PACKAGE_NAME="avatar-creator-core"
          LATEST_VERSION=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json | python3 -c "import sys, json; print(json.load(sys.stdin)['info'].get('version', ''))" || true)
          if [ -z "$LATEST_VERSION" ] || [[ "$LATEST_VERSION" == *"ModuleNotFoundError"* ]]; then
            VERSION="1.0.0"
          else
            VERSION=$LATEST_VERSION
          fi
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" != "develop" ]; then
              BRANCH_NAME=${BRANCH_NAME#feature/}
              DATE_STR=$(date +'%Y%m%d%H%M%S')
              VERSION="${VERSION}+${BRANCH_NAME}.${DATE_STR}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Package version: $VERSION"

      - name: Update version in setup.cfg
        run: |
          sed -i "s/^version = .*/version = $VERSION/" setup.cfg

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Install test dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Install package in editable mode
        run: |
          pip install -e .

      - name: Run tests with coverage (HTML report)
        run: |
          pytest --cov=. --cov-report=html --cov-report=term

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: htmlcov/

      - name: Build package
        run: |
          python -m build

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/